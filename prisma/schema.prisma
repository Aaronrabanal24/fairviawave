// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // Used for migrations
}

model Unit {
  id          String    @id @default(cuid())
  name        String
  description String?
  status      String    @default("draft") // draft, published
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  events  Event[]
  signals Signal[]

  @@index([status])
  @@index([publishedAt])
  @@index([createdAt])
  @@map("units")
}

model Event {
  id          String   @id @default(cuid())
  unitId      String
  type        String // e.g., "status_change", "comment", "update"
  content     String?
  metadata    Json?
  visibility  String   @default("internal") // public, internal
  actor       String?
  ts          DateTime @default(now())
  contentHash String
  chainHash   String
  createdAt   DateTime @default(now())

  unit Unit @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@index([unitId])
  @@index([unitId, ts])
  @@index([visibility])
  @@index([createdAt])
  @@index([ts])
  @@index([unitId, visibility])
  @@map("events")
}

model Signal {
  id        String   @id @default(cuid())
  unitId    String
  type      String // ConversionSignalType: view_trust, precheck_start, etc.
  stage     String? // Funnel stage: view_trust, precheck_start, etc.
  sessionId String
  userId    String?
  ipHash    String
  userAgent String?
  score     Int      @default(0)
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@index([unitId])
  @@index([unitId, createdAt])
  @@index([sessionId])
  @@index([type])
  @@index([createdAt])
  @@index([ipHash])
  @@map("signals")
}
