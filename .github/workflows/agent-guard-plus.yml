name: agent-guard-plus
on:
  pull_request:
    branches: [ main ]
jobs:
  guard:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fairvia_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d fairvia_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fairvia_test
      E2E_BASE_URL: http://localhost:3000
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@9.12.0 --activate

      - name: Install
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Show versions
        run: |
          node -v
          pnpm -v

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Validate schema
        run: npx prisma validate

      - name: Apply DB migrations
        run: npx prisma migrate deploy

      - name: Build Next
        run: pnpm build

      - name: Start server (background) and wait for health
        run: |
          pnpm start &>/tmp/next.log &
          npx wait-on http://localhost:3000/api/health
          curl -sSf http://localhost:3000/api/health | jq -e '.ok==true'

      - name: Enforce test changes
        run: node scripts/enforce-tests.mjs

      - name: Unit/API tests
        run: |
          pnpm test:unit || true
          pnpm test:api

      - name: Static checks
        run: node scripts/verify-agent.mjs || true

      - name: Latency budget (health + badge)
        run: node scripts/probe-latency.mjs
        env:
          BASE: "http://localhost:3000"
          BUDGET_MS: "300"

      - name: Block secrets and infra
        run: |
          set -e
          if git diff --name-only origin/${{ github.base_ref }}... | grep -E "\.env|supabase\.toml|\.keys|id_rsa" ; then
            echo "Secret-like files changed. Blocked."
            exit 1
          fi
          if git diff --name-only origin/${{ github.base_ref }}... | grep -E "^supabase/|postgres\.conf" ; then
            echo "DB infra changed. Require manual review."
            exit 1
          fi